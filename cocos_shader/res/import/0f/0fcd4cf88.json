[
  {
    "__type__": "cc.EffectAsset",
    "_name": "sprite-point-light",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "texture": {
                "value": "white",
                "type": 29
              },
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              },
              "centerColor": {
                "value": [
                  1,
                  1,
                  0,
                  1
                ],
                "editor": {
                  "type": "color",
                  "tooltip": "发光颜色"
                },
                "type": 16
              },
              "centerPoint": {
                "value": [
                  0.2,
                  0.2
                ],
                "editor": {
                  "tooltip": "扩散起点坐标"
                },
                "type": 14
              },
              "radius": {
                "value": [
                  0.4
                ],
                "editor": {
                  "tooltip": "扩散半径"
                },
                "type": 13
              },
              "cropAlpha": {
                "value": [
                  1
                ],
                "editor": {
                  "tooltip": "是否裁剪透明区域上的光。0：不启用，非0：启用"
                },
                "type": 13
              },
              "enableFog": {
                "value": [
                  0
                ],
                "editor": {
                  "tooltip": "是否启用迷雾效果。0：不启用，非0：启用"
                },
                "type": 13
              }
            },
            "program": "sprite-point-light|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 2753774874,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
          "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_DIFFUSION\nuniform Diffusion {\n  vec4 centerColor;\n  vec2 centerPoint;\n  float radius;\n  float cropAlpha;\n  float enableFog;\n};\nvec4 addLightColor(vec4 textureColor, vec2 centerPoint, float radius, vec4 centerColor) {\n  float dis = distance(v_uv0, centerPoint);\n  float a = 1.0 ;\n  if (bool(cropAlpha)) {\n    a *= step(0.01, textureColor.a);\n  }\n  if (!bool(enableFog)) {\n    a *= step(dis, radius);\n  }\n  a *= 1.0 - (dis / radius);\n  vec4 lightColor = centerColor * a;\n  return textureColor * textureColor.a + lightColor;\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  o *= texture(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  #if ENABLE_DIFFUSION\n  gl_FragColor = addLightColor(gl_FragColor, centerPoint, radius, centerColor);\n  #endif\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
          "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_DIFFUSION\nuniform vec4 centerColor;\nuniform vec2 centerPoint;\nuniform float radius;\nuniform float cropAlpha;\nuniform float enableFog;\nvec4 addLightColor(vec4 textureColor, vec2 centerPoint, float radius, vec4 centerColor) {\n  float dis = distance(v_uv0, centerPoint);\n  float a = 1.0 ;\n  if (bool(cropAlpha)) {\n    a *= step(0.01, textureColor.a);\n  }\n  if (!bool(enableFog)) {\n    a *= step(dis, radius);\n  }\n  a *= 1.0 - (dis / radius);\n  vec4 lightColor = centerColor * a;\n  return textureColor * textureColor.a + lightColor;\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  o *= texture2D(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  #if ENABLE_DIFFUSION\n  gl_FragColor = addLightColor(gl_FragColor, centerPoint, radius, centerColor);\n  #endif\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "USE_TEXTURE",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "CC_USE_MODEL",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "ENABLE_DIFFUSION",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "CC_USE_ALPHA_ATLAS_TEXTURE",
            "type": "boolean",
            "defines": [
              "USE_TEXTURE"
            ]
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          },
          {
            "name": "Diffusion",
            "members": [
              {
                "name": "centerColor",
                "type": 16,
                "count": 1
              },
              {
                "name": "centerPoint",
                "type": 14,
                "count": 1
              },
              {
                "name": "radius",
                "type": 13,
                "count": 1
              },
              {
                "name": "cropAlpha",
                "type": 13,
                "count": 1
              },
              {
                "name": "enableFog",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "ENABLE_DIFFUSION"
            ],
            "binding": 1
          }
        ],
        "samplers": [
          {
            "name": "texture",
            "type": 29,
            "count": 1,
            "defines": [
              "USE_TEXTURE"
            ],
            "binding": 30
          }
        ],
        "record": null,
        "name": "sprite-point-light|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.Material",
    "_name": "sprite-point-light",
    "_effectAsset": {
      "__uuid__": "72oYL8CKZPqo42i9hLSgtT"
    },
    "_techniqueData": {
      "0": {
        "props": {
          "radius": 0.4
        },
        "defines": {
          "USE_TEXTURE": true,
          "ENABLE_DIFFUSION": true
        }
      }
    }
  }
]